/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/UnitTests/JUnit5TestClass.java to edit this template
 */
package iotbay.group1.iotbay;

import java.util.ArrayList;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
 *
 * @author Zoey
 */
public class InvoiceManagerTest {
    

    public InvoiceManagerTest() {

    }
    
    @Test
public void testInvoice(){
Invoice expected = new Invoice(0,"1999-11-02",55.55,"CASH","PENDING",5,5);
InvoiceManager.createInvoice(expected);
ArrayList<Invoice> list = InvoiceManager.getInvoices(5);
Invoice result = list.get(list.size()-1);
//must set the autogenerated index ID
int testID = result.getId();
expected.setId(testID);
//Test that Create and Read work by comparing each field
Assertions.assertEquals(expected.getDate(), result.getDate());
Assertions.assertEquals(expected.getAmount(), result.getAmount());
Assertions.assertEquals(expected.getPayment_method(), result.getPayment_method());
Assertions.assertEquals(expected.getStatus(), result.getStatus());
Assertions.assertEquals(expected.getCust_id(), result.getCust_id());
Assertions.assertEquals(expected.getOrder_id(), result.getOrder_id());

expected.setPayment_method("Credit Card");
InvoiceManager.updateInvoice(expected);
//Test that Update worked
result = InvoiceManager.getSingleInvoice(testID);
//only one field was changed so only 1 assertion needed to test
Assertions.assertEquals(expected.getDate(), result.getDate());
Assertions.assertEquals(expected.getAmount(), result.getAmount());
Assertions.assertEquals(expected.getPayment_method(), result.getPayment_method());
Assertions.assertEquals(expected.getStatus(), result.getStatus());
Assertions.assertEquals(expected.getCust_id(), result.getCust_id());
Assertions.assertEquals(expected.getOrder_id(), result.getOrder_id());
//Test that delete 
InvoiceManager.deleteInvoice(expected);
result = InvoiceManager.getSingleInvoice(testID);
//result object exists but all fields should be zerod and null including ID
Assertions.assertNotEquals(expected.getDate(), result.getDate());
Assertions.assertNotEquals(expected.getAmount(), result.getAmount());
Assertions.assertNotEquals(expected.getPayment_method(), result.getPayment_method());
Assertions.assertNotEquals(expected.getStatus(), result.getStatus());
Assertions.assertNotEquals(expected.getCust_id(), result.getCust_id());
Assertions.assertNotEquals(expected.getOrder_id(), result.getOrder_id());


}


    @BeforeAll
    public static void setUpClass() {
    }
    
    @AfterAll
    public static void tearDownClass() {
    }
    
    @BeforeEach
    public void setUp() {
    }
    
    @AfterEach
    public void tearDown() {
    }
    
}
